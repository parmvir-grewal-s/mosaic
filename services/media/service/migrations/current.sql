--! Message: interstitials-added

DROP TABLE IF EXISTS app_public.interstitials CASCADE;
CREATE TABLE app_public.interstitials (
  id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  title TEXT NOT NULL,
  external_id TEXT UNIQUE,
  main_video_id UUID,

  CONSTRAINT title_max_length CHECK(ax_utils.constraint_max_length(title, 100, 'The title can only be %2$s characters long.')),
  CONSTRAINT title_not_empty CHECK(ax_utils.constraint_not_empty(title, 'The title cannot be empty.'))
);
SELECT ax_define.define_audit_date_fields_on_table('interstitials', 'app_public');
SELECT ax_define.define_audit_user_fields_on_table('interstitials', 'app_public', ':DEFAULT_USERNAME');

SELECT ax_define.define_authentication('INTERSTITIALS_VIEW,INTERSTITIALS_EDIT,ADMIN', 'INTERSTITIALS_EDIT,ADMIN', 'interstitials', 'app_public');

SELECT ax_define.define_unique_constraint('external_id', 'interstitials', 'app_public');

GRANT SELECT, DELETE ON app_public.interstitials TO ":DATABASE_GQL_ROLE";
GRANT INSERT (
  title,
  external_id,
  main_video_id
) ON app_public.interstitials TO ":DATABASE_GQL_ROLE";
GRANT UPDATE (
  title,
  external_id,
  main_video_id
) ON app_public.interstitials TO ":DATABASE_GQL_ROLE";

SELECT ax_define.define_subscription_triggers('id', 'interstitials', 'app_public', 'interstitials', 'Interstitial');
SELECT ax_define.define_indexes_with_id('title', 'interstitials', 'app_public');
SELECT ax_define.define_indexes_with_id('external_id', 'interstitials', 'app_public');
SELECT ax_define.define_like_index('title', 'interstitials', 'app_public');

-- TODO: After a new table is added and service is running, new GraphQL queries/mutations will become available based on GRANT statements.
--       Newly added operations must be assigned to permissions in the PermissionDefinition to become accessible.
-- TODO: Adjust SubscriptionsPlugin by adding a subscription GraphQL endpoint, e.g. `SubscriptionsPluginFactory('interstitials', 'Interstitial', 'Int')`